.. _CChitin Class:

==========================
CChitin Class
==========================

.. toctree::
   :maxdepth: 1

The structure used for this class is :ref:`CChitin<CChitin>`

+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Quick Ref**                                                                                                                                                          |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:CChitin**\(int argc, char\*\* argv)                                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:~CChitin**\()                                                                                                                                        |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:AddEngine**\(:ref:`CWarp<CWarp>`\* pNewEngine)                                                                                                       |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual :ref:`CRes<CRes>`\* **CChitin\:\:AllocResObject**\(int nType)                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:AsynchronousUpdate**\(unsigned int __formal)                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:BroadcastMultiplayerProgressBarInfo**\()                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual int **CChitin\:\:ConfirmQuit**\()                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned char **CChitin\:\:CutsceneModeActive**\()                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual int **CChitin\:\:FontRectOutline**\()                                                                                                                          |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| unsigned char **CChitin\:\:FullScreen**\()                                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:EnginesGameInit**\()                                                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:EnginesGameUninit**\()                                                                                                                               |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual int **CChitin\:\:GetEAXActive**\()                                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned char **CChitin\:\:GetGamespyResponse**\(unsigned char __formal)                                                                                       |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:GetGameSpyCode**\(:ref:`CString<CString>`\& sGameSpyCode)                                                                                    |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:GetGameSpyGameName**\(:ref:`CString<CString>`\& sGameSpyName)                                                                                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual :ref:`CString<CString>`\& **CChitin\:\:GetIconRes**\()                                                                                                         |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned long **CChitin\:\:GetIDSBadDeskTopBitDepth**\()                                                                                                       |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned long **CChitin\:\:GetIDSChoosePixelFormat**\()                                                                                                        |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned long **CChitin\:\:GetIDSExclusiveMode**\()                                                                                                            |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned long **CChitin\:\:GetIDSInvalidVideoMode**\()                                                                                                         |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned long **CChitin\:\:GetIDSOpenGLDll**\()                                                                                                                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned long **CChitin\:\:GetIDSSetGameBitDepth**\()                                                                                                          |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned long **CChitin\:\:GetIDSSetGameResolution**\()                                                                                                        |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned long **CChitin\:\:GetIDSSetPixelFormat**\()                                                                                                           |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned long **CChitin\:\:GetIDSWindowsFonts**\()                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual const char\* **CChitin\:\:GetKeyFileName**\()                                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual long **CChitin\:\:GetMovieVolume**\()                                                                                                                          |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual :ref:`CString<CString>` __cdecl **CChitin\:\:GetNetworkVersionString**\() = 0                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned char **CChitin\:\:GetNumberSoundChannels**\()                                                                                                         |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:GetPanicCDStrings**\(:ref:`CString<CString>`\& sMediaRemoved, :ref:`CString<CString>`\& sPlaceCD, :ref:`CString<CString>`\& sInDrive)        |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:GetScreenShotFilePrefix**\(:ref:`CString<CString>`\& szGameFileName)                                                                         |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| int **CChitin\:\:GetTimer**\(int timer)                                                                                                                                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual :ref:`CString<CString>` __cdecl **CChitin\:\:GetVersionString**\() = 0                                                                                         |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned short **CChitin\:\:GetMultiplayerDirectPlayPort**\()                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual unsigned short **CChitin\:\:GetMultiplayerGameSpyPort**\()                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| int **CChitin\:\:HasDirectX**\()                                                                                                                                       |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:HideVirtualKeyboard**\()                                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| int **CChitin\:\:InitInstance**\()                                                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:InitResources**\()                                                                                                                                   |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| unsigned char **CChitin\:\:InitSound**\()                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:InitVideo**\()                                                                                                                                       |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual int **CChitin\:\:InitializeServices**\()                                                                                                                       |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:InitializeVariables**\()                                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual int **CChitin\:\:Is3DSound**\(int nChannel)                                                                                                                    |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| int **CChitin\:\:IsAndroid**\()                                                                                                                                        |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| int **CChitin\:\:IsHosting**\()                                                                                                                                        |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| int **CChitin\:\:IsIOS**\()                                                                                                                                            |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| int **CChitin\:\:IsMultiplayer**\()                                                                                                                                    |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| int **CChitin\:\:IsTouchUI**\()                                                                                                                                        |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:LoadOptions**\()                                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:OnAltEnter**\()                                                                                                                                      |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:OnDropFile**\(const char\* path)                                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:OnLowMemory**\()                                                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:OnMixerInitialize**\()                                                                                                                       |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:OnMultiplayerPlayerJoin**\(int __formal)                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:OnMultiplayerPlayerLeave**\(int __formal)                                                                                                    |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:OnMultiplayerPlayerVisible**\(int __formal)                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:OnMultiplayerSessionClose**\()                                                                                                               |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:OnMultiplayerSessionOpen**\(:ref:`CString<CString>`\& __formal)                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:OnMultiplayerSessionToClose**\()                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:OnResizeWindow**\(int w, int h)                                                                                                                      |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual int **CChitin\:\:MessageCallback**\(unsigned char\* __formal)                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:ParseCommandLine**\()                                                                                                                                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:PreLoadFonts**\()                                                                                                                            |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| int **CChitin\:\:ProcessEvents**\()                                                                                                                                    |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:ReadIniFiles**\()                                                                                                                                    |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:RedrawScreen**\()                                                                                                                            |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:Resume**\()                                                                                                                                          |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:SetCDSwitchActivateEngine**\(int bValue)                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:SetCDSwitchStatus**\(unsigned char __formal)                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:SelectEngine**\(:ref:`CWarp<CWarp>`\* pNewEngine)                                                                                            |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:SetupPanels**\()                                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:SetProgressBar**\(unsigned char __formal)                                                                                                    |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:SetProgressBarActivateEngine**\(int bValue)                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:SetRenderCount**\(unsigned char nCount)                                                                                                      |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:SetSoundVolumes**\()                                                                                                                         |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:ShowVirtualKeyboard**\(int multiline)                                                                                                                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:ShutDown**\(int nLineNumber, const char\* szFileName, const char\* text)                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| virtual void **CChitin\:\:SynchronousUpdate**\()                                                                                                                       |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| unsigned char **CChitin\:\:UninitSound**\()                                                                                                                            |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void **CChitin\:\:Update**\()                                                                                                                                          |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| int **CChitin\:\:WinMain**\()                                                                                                                                          |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+




----

---------------
Constructors
---------------

+----------------------------------------------------------+------------------------------------------------------+
| **Name**                                                 | **Description**                                      |
+----------------------------------------------------------+------------------------------------------------------+
| :ref:`CChitin\:\:CChitin<CChitinCChitin>`                | Constructs a ``CChitin`` object                      |
+----------------------------------------------------------+------------------------------------------------------+
| :ref:`CChitin\:\:~CChitin<CChitin~CChitin>`              | Destroys a ``CChitin`` object                        |
+----------------------------------------------------------+------------------------------------------------------+

.. _CChitinCChitin:

CChitin\:\:CChitin
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Constructs a ``CChitin`` object

::

   void CChitin::CChitin(
      int argc, 
      char** argv);

**Parameters**

* ``int`` *argc* - An integer that contains the count of arguments that follow in argv
* ``char``\*\* *argv* - An array of null-terminated strings representing command-line arguments

**Remarks**

By convention, ``argv[0]`` is the command with which the program is invoked, ``argv[1]`` is the first command-line argument, and so on. See :ref:`CChitin\:\:ParseCommandLine<CChitinParseCommandLine>` for details on command line parsing.


Constructs a ``CChitin`` object


----

.. _CChitin~CChitin:

CChitin\:\:~CChitin
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Destroys the ``CChitin`` object

::

   void CChitin::~CChitin();

**Remarks**

Destroys the ``CChitin`` object




----

---------------
Methods
---------------

+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| **Name**                                                                                          | **Description**                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:AddEngine<CChitinAddEngine>`                                                     |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:AllocResObject<CChitinAllocResObject>`                                           | Creates and allocates memory for a resource                                             |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:AsynchronousUpdate<CChitinAsynchronousUpdate>`                                   |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:BroadcastMultiplayerProgressBarInfo<CChitinBroadcastMultiplayerProgressBarInfo>` | Broadcast to all connected sessions the progress bar information                        |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:ConfirmQuit<CChitinConfirmQuit>`                                                 | Displays a prompt to confirm if players wishes to quit, save before quit, etc           |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:CutsceneModeActive<CChitinCutsceneModeActive>`                                   | Determines if the cutscene mode is active or not (for dreams etc)                       |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:FontRectOutline<CChitinFontRectOutline>`                                         |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:FullScreen<CChitinFullScreen>`                                                   |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:EnginesGameInit<CChitinEnginesGameInit>`                                         |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:EnginesGameUninit<CChitinEnginesGameUninit>`                                     |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetEAXActive<CChitinGetEAXActive>`                                               | Determines if the EAX sound feature is active or not                                    |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetGamespyResponse<CChitinGetGamespyResponse>`                                   |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetGameSpyCode<CChitinGetGameSpyCode>`                                           | Gets the game spy code                                                                  |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetGameSpyGameName<CChitinGetGameSpyGameName>`                                   | Gets the game spy game name                                                             |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetIconRes<CChitinGetIconRes>`                                                   | Gets default icon resolution                                                            |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetIDSBadDeskTopBitDepth<CChitinGetIDSBadDeskTopBitDepth>`                       |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetIDSChoosePixelFormat<CChitinGetIDSChoosePixelFormat>`                         |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetIDSExclusiveMode<CChitinGetIDSExclusiveMode>`                                 |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetIDSInvalidVideoMode<CChitinGetIDSInvalidVideoMode>`                           |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetIDSOpenGLDll<CChitinGetIDSOpenGLDll>`                                         |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetIDSSetGameBitDepth<CChitinGetIDSSetGameBitDepth>`                             |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetIDSSetGameResolution<CChitinGetIDSSetGameResolution>`                         |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetIDSSetPixelFormat<CChitinGetIDSSetPixelFormat>`                               |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetIDSWindowsFonts<CChitinGetIDSWindowsFonts>`                                   |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetKeyFileName<CChitinGetKeyFileName>`                                           | Returns a pointer to a string containing the default key file (usually ``chitin.key``)  |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetMovieVolume<CChitinGetMovieVolume>`                                           | Returns movie volume                                                                    |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetNetworkVersionString<CChitinGetNetworkVersionString>`                         |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetNumberSoundChannels<CChitinGetNumberSoundChannels>`                           | Returns number of sound channels supported by local machine                             |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetPanicCDStrings<CChitinGetPanicCDStrings>`                                     | Legacy function for when game was distributed on CD/DVD                                 |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetScreenShotFilePrefix<CChitinGetScreenShotFilePrefix>`                         |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetTimer<CChitinGetTimer>`                                                       |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetVersionString<CChitinGetVersionString>`                                       |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetMultiplayerDirectPlayPort<CChitinGetMultiplayerDirectPlayPort>`               | Returns port no used in DirectPlay                                                      |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:GetMultiplayerGameSpyPort<CChitinGetMultiplayerGameSpyPort>`                     | Returns port no used in GameSpy                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:HasDirectX<CChitinHasDirectX>`                                                   |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:HideVirtualKeyboard<CChitinHideVirtualKeyboard>`                                 |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:InitInstance<CChitinInitInstance>`                                               |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:InitResources<CChitinInitResources>`                                             |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:InitSound<CChitinInitSound>`                                                     |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:InitVideo<CChitinInitVideo>`                                                     |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:InitializeServices<CChitinInitializeServices>`                                   |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:InitializeVariables<CChitinInitializeVariables>`                                 |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:Is3DSound<CChitinIs3DSound>`                                                     | Returns if 3D sound is supported on local machine                                       |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:IsAndroid<CChitinIsAndroid>`                                                     | Returns true if running on an Android operating system                                  |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:IsHosting<CChitinIsHosting>`                                                     | Returns true if game instance is hosting a multiplayer game                             |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:IsIOS<CChitinIsIOS>`                                                             | Returns true if running on an Apple IOS (iPad) operating system                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:IsMultiplayer<CChitinIsMultiplayer>`                                             | Returns true if game instance is a multiplayer game                                     |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:IsTouchUI<CChitinIsTouchUI>`                                                     | Returns true if a touch sensitive interface is supported on device                      |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:LoadOptions<CChitinLoadOptions>`                                                 | Load options                                                                            |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:OnAltEnter<CChitinOnAltEnter>`                                                   | Event action for when Alt+Enter keys are pressed                                        |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:OnDropFile<CChitinOnDropFile>`                                                   | Event for handling a file dropped onto running game instance                            |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:OnLowMemory<CChitinOnLowMemory>`                                                 |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:OnMixerInitialize<CChitinOnMixerInitialize>`                                     |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:OnMultiplayerPlayerJoin<CChitinOnMultiplayerPlayerJoin>`                         | Event action when a player joins a multiplayer game session                             |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:OnMultiplayerPlayerLeave<CChitinOnMultiplayerPlayerLeave>`                       | Event action when a player leaves a multiplayer game session                            |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:OnMultiplayerPlayerVisible<CChitinOnMultiplayerPlayerVisible>`                   | Event action when a player in a multiplayer game session becomes visible to others      |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:OnMultiplayerSessionClose<CChitinOnMultiplayerSessionClose>`                     | Event action when a multiplayer game session closes                                     |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:OnMultiplayerSessionOpen<CChitinOnMultiplayerSessionOpen>`                       | Event action when a multiplayer game session opens                                      |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:OnMultiplayerSessionToClose<CChitinOnMultiplayerSessionToClose>`                 | Event action when a multiplayer game session is about to close                          |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:OnResizeWindow<CChitinOnResizeWindow>`                                           | Event action for when window is being resized                                           |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:MessageCallback<CChitinMessageCallback>`                                         |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:ParseCommandLine<CChitinParseCommandLine>`                                       | Parses the command line passed to the game executable                                   |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:PreLoadFonts<CChitinPreLoadFonts>`                                               | Preload fonts for game                                                                  |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:ProcessEvents<CChitinProcessEvents>`                                             |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:ReadIniFiles<CChitinReadIniFiles>`                                               |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:RedrawScreen<CChitinRedrawScreen>`                                               |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:Resume<CChitinResume>`                                                           |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:SetCDSwitchActivateEngine<CChitinSetCDSwitchActivateEngine>`                     |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:SetCDSwitchStatus<CChitinSetCDSwitchStatus>`                                     |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:SelectEngine<CChitinSelectEngine>`                                               |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:SetupPanels<CChitinSetupPanels>`                                                 |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:SetProgressBar<CChitinSetProgressBar>`                                           | Set progress bar on screen                                                              |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:SetProgressBarActivateEngine<CChitinSetProgressBarActivateEngine>`               |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:SetRenderCount<CChitinSetRenderCount>`                                           |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:SetSoundVolumes<CChitinSetSoundVolumes>`                                         |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:ShowVirtualKeyboard<CChitinShowVirtualKeyboard>`                                 |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:ShutDown<CChitinShutDown>`                                                       |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:SynchronousUpdate<CChitinSynchronousUpdate>`                                     |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:UninitSound<CChitinUninitSound>`                                                 |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:Update<CChitinUpdate>`                                                           |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| :ref:`CChitin\:\:WinMain<CChitinWinMain>`                                                         |                                                                                         |
+---------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+

.. _CChitinAddEngine:

CChitin\:\:AddEngine
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   void CChitin::AddEngine(CWarp* pNewEngine);

**Parameters**

* :ref:`CWarp<CWarp>`\* *pNewEngine* - pointer to new engine instance to add

**Remarks**





----

.. _CChitinAllocResObject:

CChitin\:\:AllocResObject
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Creates and allocates memory for a resource

::

   virtual CRes* CChitin::AllocResObject(int nType);

**Parameters**

* ``int`` *nType* - type of resource to create

**Return Value**

Returns a :ref:`CRes<CRes>` object

**Remarks**




----

.. _CChitinAsynchronousUpdate:

CChitin\:\:AsynchronousUpdate
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::AsynchronousUpdate(unsigned int __formal);

**Parameters**

* ``unsigned int`` *__formal* - 

**Remarks**




----

.. _CChitinBroadcastMultiplayerProgressBarInfo:

CChitin\:\:BroadcastMultiplayerProgressBarInfo
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Broadcast to all connected sessions the progress bar information

::

   virtual void CChitin::BroadcastMultiplayerProgressBarInfo();

**Remarks**




----

.. _CChitinConfirmQuit:

CChitin\:\:ConfirmQuit
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Displays a prompt to confirm if players wishes to quit, save before quit, etc

::

   virtual int CChitin::ConfirmQuit();

**Return Value**

Returns an ``int``

**Remarks**




----

.. _CChitinCutsceneModeActive:

CChitin\:\:CutsceneModeActive
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Determines if the cutscene mode is active or not (for dreams etc)

::

   virtual unsigned char CChitin::CutsceneModeActive();

**Return Value**

Returns an ``unsigned char``

**Remarks**




----

.. _CChitinFontRectOutline:

CChitin\:\:FontRectOutline
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual int CChitin::FontRectOutline();

**Return Value**

Returns an ``int``

**Remarks**




----

.. _CChitinFullScreen:

CChitin\:\:FullScreen
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   unsigned char CChitin::FullScreen();

**Return Value**

Returns an ``unsigned char``

**Remarks**





----

.. _CChitinEnginesGameInit:

CChitin\:\:EnginesGameInit
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   void CChitin::EnginesGameInit();

**Remarks**




----

.. _CChitinEnginesGameUninit:

CChitin\:\:EnginesGameUninit
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   void CChitin::EnginesGameUninit();

**Remarks**




----

.. _CChitinGetEAXActive:

CChitin\:\:GetEAXActive
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Determines if the EAX sound feature is active or not

::

   virtual int CChitin::GetEAXActive();

**Return Value**

Returns an ``int`` representing true ``1`` or false ``0``

**Remarks**




----

.. _CChitinGetGamespyResponse:

CChitin\:\:GetGamespyResponse
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual unsigned char CChitin::GetGamespyResponse(unsigned char __formal);

**Parameters**

* ``unsigned char`` *__formal* - 

**Return Value**

Returns ``unsigned char``

**Remarks**




----

.. _CChitinGetGameSpyCode:

CChitin\:\:GetGameSpyCode
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Gets the game spy code

::

   virtual void CChitin::GetGameSpyCode(CString& sGameSpyCode);

**Parameters**

* :ref:`CString<CString>`\& *sGameSpyCode* - address of string variable to store game spy code

**Remarks**




----

.. _CChitinGetGameSpyGameName:

CChitin\:\:GetGameSpyGameName
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Gets the game spy game name

::

   virtual void CChitin::GetGameSpyGameName(CString& sGameSpyName);

**Parameters**

* :ref:`CString<CString>`\& *sGameSpyName* - address of string variable to store game spy name

**Remarks**



----

.. _CChitinGetIconRes:

CChitin\:\:GetIconRes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Gets default icon resolution

::

   virtual CString& CChitin::GetIconRes();

**Return Value**

Returns a :ref:`CString<CString>`\&

**Remarks**





----

.. _CChitinGetIDSBadDeskTopBitDepth:

CChitin\:\:GetIDSBadDeskTopBitDepth
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual unsigned long CChitin::GetIDSBadDeskTopBitDepth();

**Return Value**

Returns ``unsigned long``

**Remarks**




----

.. _CChitinGetIDSChoosePixelFormat:

CChitin\:\:GetIDSChoosePixelFormat
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual unsigned long CChitin::GetIDSChoosePixelFormat();

**Return Value**

Returns ``unsigned long``

**Remarks**




----

.. _CChitinGetIDSExclusiveMode:

CChitin\:\:GetIDSExclusiveMode
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual unsigned long CChitin::GetIDSExclusiveMode();

**Return Value**

Returns ``unsigned long``

**Remarks**




----

.. _CChitinGetIDSInvalidVideoMode:

CChitin\:\:GetIDSInvalidVideoMode
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual unsigned long CChitin::GetIDSInvalidVideoMode();

**Return Value**

Returns ``unsigned long``

**Remarks**




----

.. _CChitinGetIDSOpenGLDll:

CChitin\:\:GetIDSOpenGLDll
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual unsigned long CChitin::GetIDSOpenGLDll();

**Return Value**

Returns ``unsigned long``

**Remarks**




----

.. _CChitinGetIDSSetGameBitDepth:

CChitin\:\:GetIDSSetGameBitDepth
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual unsigned long CChitin::GetIDSSetGameBitDepth();

**Return Value**

Returns ``unsigned long``

**Remarks**



----

.. _CChitinGetIDSSetGameResolution:

CChitin\:\:GetIDSSetGameResolution
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual unsigned long CChitin::GetIDSSetGameResolution();

**Return Value**

Returns ``unsigned long``

**Remarks**





----

.. _CChitinGetIDSSetPixelFormat:

CChitin\:\:GetIDSSetPixelFormat
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual unsigned long CChitin::GetIDSSetPixelFormat();

**Return Value**

Returns ``unsigned long``

**Remarks**




----

.. _CChitinGetIDSWindowsFonts:

CChitin\:\:GetIDSWindowsFonts
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual unsigned long CChitin::GetIDSWindowsFonts();

**Return Value**

Returns ``unsigned long``

**Remarks**




----

.. _CChitinGetKeyFileName:

CChitin\:\:GetKeyFileName
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns a pointer to a string containing the default key file (usually ``chitin.key``)

::

   virtual const char* CChitin::GetKeyFileName();

**Return Value**

Returns ``const char``\*, a pointer to a string containing key file

**Remarks**




----

.. _CChitinGetMovieVolume:

CChitin\:\:GetMovieVolume
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns movie volume

::

   virtual long CChitin::GetMovieVolume();

**Return Value**

Returns ``long`` representing movie volume

**Remarks**




----

.. _CChitinGetNetworkVersionString:

CChitin\:\:GetNetworkVersionString
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual CString __cdecl CChitin::GetNetworkVersionString();

**Return Value**

Returns a :ref:`CString<CString>` containing the network version

**Remarks**




----

.. _CChitinGetNumberSoundChannels:

CChitin\:\:GetNumberSoundChannels
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns number of sound channels supported by local machine

::

   virtual unsigned char CChitin::GetNumberSoundChannels();

**Return Value**

Returns ``unsigned char``

**Remarks**



----

.. _CChitinGetPanicCDStrings:

CChitin\:\:GetPanicCDStrings
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Legacy function for when game was distributed on CD/DVD

::

   virtual void CChitin::GetPanicCDStrings(
      CString& sMediaRemoved, 
      CString& sPlaceCD, 
      CString& sInDrive);

**Parameters**

* :ref:`CString<CString>`\& *sMediaRemoved* - address of string to store media string
* :ref:`CString<CString>`\& *sPlaceCD* - address of string to store place cd/dvd string
* :ref:`CString<CString>`\& *sInDrive* - address of string to store in drive string

**Remarks**





----

.. _CChitinGetScreenShotFilePrefix:

CChitin\:\:GetScreenShotFilePrefix
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::GetScreenShotFilePrefix(CString& szGameFileName);

**Parameters**

* :ref:`CString<CString>`\& *szGameFileName* - address of string to store screenshot filename prefix to

**Remarks**




----

.. _CChitinGetTimer:

CChitin\:\:GetTimer
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   int CChitin::GetTimer(int timer);

**Parameters**

* ``int`` *timer* - 

**Return Value**

Returns an ``int`` value

**Remarks**




----

.. _CChitinGetVersionString:

CChitin\:\:GetVersionString
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual CString __cdecl CChitin::GetVersionString();

**Return Value**

Returns a :ref:`CString<CString>` containing the game version

**Remarks**




----

.. _CChitinGetMultiplayerDirectPlayPort:

CChitin\:\:GetMultiplayerDirectPlayPort
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns port no used in DirectPlay

::

   virtual unsigned short CChitin::GetMultiplayerDirectPlayPort();

**Return Value**

Returns an ``unsigned short`` representing the port

**Remarks**




----

.. _CChitinGetMultiplayerGameSpyPort:

CChitin\:\:GetMultiplayerGameSpyPort
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns port no used in GameSpy

::

   virtual unsigned short CChitin::GetMultiplayerGameSpyPort();

**Return Value**

Returns an ``unsigned short`` representing the port

**Remarks**




----

.. _CChitinHasDirectX:

CChitin\:\:HasDirectX
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   int CChitin::HasDirectX();

**Return Value**

Returns an ``int`` representing true ``1`` or false ``0``

**Remarks**



----

.. _CChitinHideVirtualKeyboard:

CChitin\:\:HideVirtualKeyboard
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Hides the virtual keyboard from the screen ui

::

   void CChitin::HideVirtualKeyboard();

**Remarks**

See also :ref:`CChitin\:\:ShowVirtualKeyboard<CChitinShowVirtualKeyboard>`



----

.. _CChitinInitInstance:

CChitin\:\:InitInstance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   int CChitin::InitInstance();

**Return Value**

Returns an ``int`` value

**Remarks**




----

.. _CChitinInitResources:

CChitin\:\:InitResources
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   void CChitin::InitResources();

**Remarks**




----

.. _CChitinInitSound:

CChitin\:\:InitSound
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   unsigned char CChitin::InitSound();

**Return Value**

Returns ``unsigned char``

**Remarks**




----

.. _CChitinInitVideo:

CChitin\:\:InitVideo
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   void CChitin::InitVideo();

**Remarks**




----

.. _CChitinInitializeServices:

CChitin\:\:InitializeServices
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual int CChitin::InitializeServices();

**Return Value**

Returns an ``int`` value

**Remarks**




----

.. _CChitinInitializeVariables:

CChitin\:\:InitializeVariables
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   void CChitin::InitializeVariables();

**Remarks**



----

.. _CChitinIs3DSound:

CChitin\:\:Is3DSound
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns if 3D sound is supported on local machine

::

   virtual int CChitin::Is3DSound(int nChannel);

**Parameters**

* ``int`` *nChannel* - 

**Return Value**

Returns an ``int`` representing true ``1`` or false ``0``

**Remarks**





----

.. _CChitinIsAndroid:

CChitin\:\:IsAndroid
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns true if running on an Android operating system

::

   int CChitin::IsAndroid();

**Return Value**

Returns an ``int`` representing true ``1`` or false ``0``

**Remarks**

Compiled and hardcoded to return false ``0`` on other operating system builds



----

.. _CChitinIsHosting:

CChitin\:\:IsHosting
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns true if game instance is hosting a multiplayer game, or false otherwise

::

   int CChitin::IsHosting();

**Return Value**

Returns an ``int`` representing true ``1`` or false ``0``

**Remarks**




----

.. _CChitinIsIOS:

CChitin\:\:IsIOS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns true if running on an Apple IOS (iPad) operating system

::

   int CChitin::IsIOS();

**Return Value**

Returns an ``int`` representing true ``1`` or false ``0``

**Remarks**

Compiled and hardcoded to return false ``0`` on other operating system builds



----

.. _CChitinIsMultiplayer:

CChitin\:\:IsMultiplayer
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns true if game instance is a multiplayer game, or false otherwise

::

   int CChitin::IsMultiplayer();

**Return Value**

Returns an ``int`` representing true ``1`` or false ``0``

**Remarks**




----

.. _CChitinIsTouchUI:

CChitin\:\:IsTouchUI
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns true if a touch sensitive interface is supported on device (IOS, Android, Surface etc), or false otherwise

::

   int CChitin::IsTouchUI();

**Return Value**

Returns an ``int`` representing true ``1`` or false ``0``

**Remarks**




----

.. _CChitinLoadOptions:

CChitin\:\:LoadOptions
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Load options

::

   virtual void CChitin::LoadOptions();

**Remarks**



----

.. _CChitinOnAltEnter:

CChitin\:\:OnAltEnter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event action for when Alt+Enter keys are pressed

::

   void CChitin::OnAltEnter();

**Remarks**

Legacy function for entering and exiting fullscreen mode



----

.. _CChitinOnDropFile:

CChitin\:\:OnDropFile
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event for handling a file dropped into a specific folder whilst the game instance is running.

::

   void CChitin::OnDropFile(const char* path);

**Parameters**

* const char\* *path* - full filepath to file "dropped"

**Remarks**

Unzips the archive file contents to specific folders (based on the extension detected) and then deletes the zip archive.

Looks for files with the following extensions:

* ".bg1character"
* ".bg2character"
* ".iwdcharacter"
* ".bg1data"
* ".bg2data"
* ".iwddata"
* ".bg1portrait"
* ".bg2portrait"
* ".iwdportrait"
* ".bg1override"
* ".bg2override"
* ".iwdoverride"
* ".bg1sounds"
* ".bg2sounds"
* ".iwdsounds"
* ".bg1save"
* ".bg1mpsave"
* ".bg1mpbpsave"
* ".bg2save"
* ".bg2mpsave"
* ".bg2mpbpsave"
* ".iwdsave"
* ".iwdmpsave"
* ".sodsave"
* ".sodmpsave"
* ".mpsodsave"



----

.. _CChitinOnLowMemory:

CChitin\:\:OnLowMemory
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   void CChitin::OnLowMemory();

**Remarks**




----

.. _CChitinOnMixerInitialize:

CChitin\:\:OnMixerInitialize
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::OnMixerInitialize();

**Remarks**




----

.. _CChitinOnMultiplayerPlayerJoin:

CChitin\:\:OnMultiplayerPlayerJoin
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event action when a player joins a multiplayer game session

::

   virtual void CChitin::OnMultiplayerPlayerJoin(int __formal);

**Parameters**

* ``int`` *__formal* - 

**Remarks**

See also :ref:`CBaldurChitin::OnMultiplayerPlayerJoin<CBaldurChitinOnMultiplayerPlayerJoin>`



----

.. _CChitinOnMultiplayerPlayerLeave:

CChitin\:\:OnMultiplayerPlayerLeave
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event action when a player leaves a multiplayer game session

::

   virtual void CChitin::OnMultiplayerPlayerLeave(int __formal);

**Parameters**

* ``int`` *__formal* - 

**Remarks**

See also :ref:`CBaldurChitin::OnMultiplayerPlayerLeave<CBaldurChitinOnMultiplayerPlayerLeave>`



----

.. _CChitinOnMultiplayerPlayerVisible:

CChitin\:\:OnMultiplayerPlayerVisible
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event action when a player in a multiplayer game session becomes visible to other existing players

::

   virtual void CChitin::OnMultiplayerPlayerVisible(int __formal);

**Parameters**

* ``int`` *__formal* - 

**Remarks**

See also :ref:`CBaldurChitin::OnMultiplayerPlayerVisible<CBaldurChitinOnMultiplayerPlayerVisible>`



----

.. _CChitinOnMultiplayerSessionClose:

CChitin\:\:OnMultiplayerSessionClose
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event action when a multiplayer game session closes

::

   virtual void CChitin::OnMultiplayerSessionClose();

**Remarks**

See also :ref:`CBaldurChitin::OnMultiplayerSessionClose<CBaldurChitinOnMultiplayerSessionClose>`



----

.. _CChitinOnMultiplayerSessionOpen:

CChitin\:\:OnMultiplayerSessionOpen
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event action when a multiplayer game session opens

::

   virtual void CChitin::OnMultiplayerSessionOpen(CString& __formal);

**Parameters**

* :ref:`CString<CString>`\& *__formal* - 

**Remarks**

See also :ref:`CBaldurChitin::OnMultiplayerSessionOpen<CBaldurChitinOnMultiplayerSessionOpen>`



----

.. _CChitinOnMultiplayerSessionToClose:

CChitin\:\:OnMultiplayerSessionToClose
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event action when a multiplayer game session is about to close

::

   virtual void CChitin::OnMultiplayerSessionToClose();

**Remarks**

See also :ref:`CBaldurChitin\:\:OnMultiplayerSessionToClose<CBaldurChitinOnMultiplayerSessionToClose>`


----

.. _CChitinOnResizeWindow:

CChitin\:\:OnResizeWindow
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event action for when window is being resized

::

   void CChitin::OnResizeWindow(
      int w, 
      int h);

**Parameters**

* ``int`` *w* - new width of main window
* ``int`` *h* - new height of main window

**Remarks**




----

.. _CChitinMessageCallback:

CChitin\:\:MessageCallback
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual int CChitin::MessageCallback(unsigned char* __formal);

**Parameters**

* unsigned char\* *__formal* - 

**Return Value**

Returns an ``int`` value

**Remarks**




----

.. _CChitinParseCommandLine:

CChitin\:\:ParseCommandLine
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Parses the command line passed to the game executable

::

   void CChitin::ParseCommandLine();

**Remarks**

The command line accepts the following recognised options and parameters:

* ``+host`` ``"201.48.99.234"`` - *address of the host machine for all players to connect to*
* ``+connect`` ``"201.48.99.234"`` - *address of machine to connect to that is hosting the session*
* ``+name`` ``"Super5Gang Adventure"`` - *custom description of the hosted session*
* ``+password`` ``"mypassword"`` - *secure the online session with a custom password*
* ``+newgame`` - *specified a new multiplayer game is to be created*
* ``+loadgame`` - *specifies an existing game*
* ``+hostname`` ``"Boo"`` - *name of the host machine*
* ``+location`` ``"location"`` - *location*
* ``+maxplayers`` ``"5"`` - *specified max players to allow: 1-6*
* ``+tob`` - *multiplayer game is set for Throne of Bhaal*

Options are preceded with a ``+``, parameter values can be enclosed in quotes ``"``

.. note:: After some reasech it has been determined that this method does not work in the EE games, it can be considered legacy code that was originally intended to work with GameSpy networking.


----

.. _CChitinPreLoadFonts:

CChitin\:\:PreLoadFonts
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Preload fonts for game

::

   virtual void CChitin::PreLoadFonts();

**Remarks**



----

.. _CChitinProcessEvents:

CChitin\:\:ProcessEvents
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   int CChitin::ProcessEvents();

**Return Value**

Returns an ``int`` value

**Remarks**





----

.. _CChitinReadIniFiles:

CChitin\:\:ReadIniFiles
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   void CChitin::ReadIniFiles();

**Remarks**




----

.. _CChitinRedrawScreen:

CChitin\:\:RedrawScreen
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::RedrawScreen();

**Remarks**




----

.. _CChitinResume:

CChitin\:\:Resume
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   void CChitin::Resume();

**Remarks**




----

.. _CChitinSetCDSwitchActivateEngine:

CChitin\:\:SetCDSwitchActivateEngine
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::SetCDSwitchActivateEngine(int bValue);

**Parameters**

* ``int`` *bValue* - true or false

**Remarks**




----

.. _CChitinSetCDSwitchStatus:

CChitin\:\:SetCDSwitchStatus
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::SetCDSwitchStatus(unsigned char __formal);

**Parameters**

* ``unsigned char`` *__formal* - 

**Remarks**




----

.. _CChitinSelectEngine:

CChitin\:\:SelectEngine
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::SelectEngine(CWarp* pNewEngine);

**Parameters**

* :ref:`CWarp<CWarp>`\* *pNewEngine* - pointer to new engine to select

**Remarks**



----

.. _CChitinSetupPanels:

CChitin\:\:SetupPanels
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::SetupPanels();

**Remarks**





----

.. _CChitinSetProgressBar:

CChitin\:\:SetProgressBar
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set progress bar on screen

::

   virtual void CChitin::SetProgressBar(unsigned char __formal);

**Parameters**

* ``unsigned char`` *__formal* - 

**Remarks**




----

.. _CChitinSetProgressBarActivateEngine:

CChitin\:\:SetProgressBarActivateEngine
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::SetProgressBarActivateEngine(int bValue);

**Parameters**

* ``int`` *bValue* - true or false

**Remarks**




----

.. _CChitinSetRenderCount:

CChitin\:\:SetRenderCount
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::SetRenderCount(unsigned char nCount);

**Parameters**

* ``unsigned char`` *nCount* - set render count

**Remarks**




----

.. _CChitinSetSoundVolumes:

CChitin\:\:SetSoundVolumes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::SetSoundVolumes();

**Remarks**




----

.. _CChitinShowVirtualKeyboard:

CChitin\:\:ShowVirtualKeyboard
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   void CChitin::ShowVirtualKeyboard(int multiline);

**Parameters**

* ``int`` *multiline* - true or false to show multiline virtual keyboard

**Remarks**

See also :ref:`CChitin\:\:HideVirtualKeyboard<CChitinHideVirtualKeyboard>`



----

.. _CChitinShutDown:

CChitin\:\:ShutDown
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::ShutDown(
      int nLineNumber, 
      const char* szFileName, 
      const char* text);

**Parameters**

* ``int`` *nLineNumber* -  line number that shutdown occured at
* ``const char``\* *szFileName* - file that shutdown occured at
* ``const char``\* *text* - message text for shutdown reason to output to log

**Remarks**



----

.. _CChitinSynchronousUpdate:

CChitin\:\:SynchronousUpdate
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   virtual void CChitin::SynchronousUpdate();

**Remarks**





----

.. _CChitinUninitSound:

CChitin\:\:UninitSound
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   unsigned char CChitin::UninitSound();

**Return Value**

Returns ``unsigned char``

**Remarks**




----

.. _CChitinUpdate:

CChitin\:\:Update
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



::

   void CChitin::Update();

**Remarks**




----

.. _CChitinWinMain:

CChitin\:\:WinMain
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Main entry point function for windows OS build

::

   int CChitin::WinMain();

**Return Value**

Returns an ``int`` value

**Remarks**


